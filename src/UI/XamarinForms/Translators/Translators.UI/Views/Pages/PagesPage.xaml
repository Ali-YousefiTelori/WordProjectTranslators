<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Translators.UI.Views.Pages.PagesPage"
             xmlns:viewmodels="clr-namespace:Translators.ViewModels.Pages;assembly=Translators.ViewModels"
             xmlns:conv="clr-namespace:Translators.UI.Converters"
             xmlns:effect="clr-namespace:Xamarin.CommunityToolkit.Effects;assembly=Xamarin.CommunityToolkit"
             xmlns:xct="clr-namespace:Xamarin.CommunityToolkit.UI.Views;assembly=Xamarin.CommunityToolkit"
             Title="{Binding CatalogName}"
             x:Name="thisPage" FlowDirection="RightToLeft">
    <ContentPage.Resources>
        <viewmodels:PageViewModel x:Key="PageViewModel" />
        <conv:EvenColorConverter x:Key="EvenColorConverter"/>
    </ContentPage.Resources>
    <ContentPage.BindingContext>
        <Binding Source="{StaticResource PageViewModel}"/>
    </ContentPage.BindingContext>
    <ContentPage.ToolbarItems>
        <ToolbarItem Icon="icon_add.png" Command="{Binding AddReadingCommand}"/>
    </ContentPage.ToolbarItems>
    <Grid BackgroundColor="#01FFFFFF">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <SwipeView>
            <SwipeView.RightItems>
                <SwipeItems Mode="Execute">
                    <SwipeItem Text="Previous Page" Command="{Binding SwipeLeftCommand,Source={StaticResource PageViewModel}}" />
                </SwipeItems>
            </SwipeView.RightItems>

            <SwipeView.LeftItems>
                <SwipeItems Mode="Execute">
                    <SwipeItem Text="Next Page" Command="{Binding SwipeRightCommand,Source={StaticResource PageViewModel}}" />
                </SwipeItems>
            </SwipeView.LeftItems>
            <RefreshView Command="{Binding RefreshCommand}" IsRefreshing="{Binding IsLoading,Mode=OneWay}">
                <CollectionView ItemsSource="{Binding Items}" ItemSizingStrategy="MeasureAllItems">
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <Grid effect:TouchEffect.Command="{Binding TouchedCommand, Source={StaticResource PageViewModel}}" effect:TouchEffect.CommandParameter="{Binding}" effect:TouchEffect.LongPressCommand="{Binding LongTouchedCommand, Source={StaticResource PageViewModel}}" effect:TouchEffect.LongPressCommandParameter="{Binding}" BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" VerticalOptions="Start">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text="{Binding MainValue}" Style="{DynamicResource MainParagraphLabel}" VerticalOptions="Start" Margin="10,0,10,0"/>
                                <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Grid.Row="1" LineBreakMode="WordWrap" Text="{Binding TranslatedValue}" Style="{DynamicResource TranslatedParagraphLabel}" Margin="10,0,10,20" />
                                <StackLayout Grid.Column="1" Grid.RowSpan="2" Orientation="Horizontal" VerticalOptions="Center">
                                    <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text=")" />
                                    <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text="{Binding Number}"/>
                                    <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text="("  />
                                </StackLayout>
                                <Grid BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" IsVisible="{Binding HasLink}" WidthRequest="24" HeightRequest="24" HorizontalOptions="End" VerticalOptions="End" Grid.RowSpan="2" Grid.Column="1">
                                    <Frame CornerRadius="24"  BackgroundColor="{StaticResource LinkBackgroundColor}" Padding="5" Margin="5,0,0,5">
                                        <Image Source="icon_link.png"/>
                                    </Frame>
                                </Grid>
                            </Grid>
                            <!--<Grid effect:TouchEffect.Command="{Binding TouchedCommand, Source={StaticResource PageViewModel}}" effect:TouchEffect.CommandParameter="{Binding}" effect:TouchEffect.LongPressCommand="{Binding LongTouchedCommand, Source={StaticResource PageViewModel}}" effect:TouchEffect.LongPressCommandParameter="{Binding}" BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" VerticalOptions="Start">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text="{Binding MainValue}" Style="{DynamicResource MainParagraphLabel}" VerticalOptions="Start" Margin="10,0,10,0"/>
                                    <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Grid.Row="1" LineBreakMode="WordWrap" Text="{Binding TranslatedValue}" Style="{DynamicResource TranslatedParagraphLabel}" Margin="10,0,10,20" />
                                    <StackLayout Grid.Column="1" Grid.RowSpan="2" Orientation="Horizontal" VerticalOptions="Center">
                                        <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text=")" />
                                        <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text="{Binding Number}"/>
                                        <Label BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text="("  />
                                    </StackLayout>
                                    <Grid BackgroundColor="{Binding IsEven,Converter={StaticResource EvenColorConverter}}" IsVisible="{Binding HasLink}" WidthRequest="24" HeightRequest="24" HorizontalOptions="End" VerticalOptions="End" Grid.RowSpan="2" Grid.Column="1">
                                        <Frame CornerRadius="24"  BackgroundColor="{StaticResource LinkBackgroundColor}" Padding="5" Margin="5,0,0,5">
                                            <Image Source="icon_link.png"/>
                                        </Frame>
                                    </Grid>
                                </Grid>-->
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </RefreshView>
        </SwipeView>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button HorizontalOptions="Start" Text="{Binding ReadingName}" Command="{Binding RemoveReadingCommand}"/>
            <StackLayout Orientation="Horizontal" Grid.Column="1">
                <Button Text="{Binding CatalogStartPageNumber}" Command="{Binding SelectPageCommand}"/>
                <Button Text="آیه" Command="{Binding SelectVerseCommand}"/>
                <Button FontFamily="icomoon" Text="" WidthRequest="40" Command="{Binding PlayCommand}">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding IsPlaying}" Value="False">
                            <Setter Property="Text" Value="" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding IsPlaying}" Value="True">
                            <Setter Property="Text" Value="" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding IsLoadingPlayStream}" Value="True">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding IsLoadingPlayStream}" Value="False">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <ActivityIndicator IsRunning="{Binding IsLoadingPlayStream}" WidthRequest="40">
                    <ActivityIndicator.Triggers>
                        <DataTrigger TargetType="ActivityIndicator" Binding="{Binding IsLoadingPlayStream}" Value="False">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                        <DataTrigger TargetType="ActivityIndicator" Binding="{Binding IsLoadingPlayStream}" Value="True">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </ActivityIndicator.Triggers>
                </ActivityIndicator>
            </StackLayout>
            <ActivityIndicator IsRunning="{Binding IsLoading}" Grid.Column="2" HorizontalOptions="End"/>
        </Grid>
        <Grid.GestureRecognizers>
            <SwipeGestureRecognizer Direction="Left" Command="{Binding SwipeLeftCommand}"/>
            <SwipeGestureRecognizer Direction="Right" Command="{Binding SwipeRightCommand}"/>
        </Grid.GestureRecognizers>
    </Grid>
</ContentPage>