<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Translators.UI.Views.PagesView"
             xmlns:effect="clr-namespace:Xamarin.CommunityToolkit.Effects;assembly=Xamarin.CommunityToolkit"
             xmlns:conv="clr-namespace:Translators.UI.Converters"
             xmlns:viewmodels="clr-namespace:Translators.ViewModels.Pages;assembly=Translators.ViewModels"
             xmlns:autoScroll="clr-namespace:Translators.UI.Effects"
             x:Name="thisPage" FlowDirection="RightToLeft">
    <!--xmlns:effect="clr-namespace:Xamarin.CommunityToolkit.Effects;assembly=Xamarin.CommunityToolkit"-->
    <ContentView.Resources>
        <viewmodels:PageViewModel x:Key="PageViewModel" />
        <conv:EvenColorConverter x:Key="EvenColorConverter"/>
        <conv:BooleanToMultipleSelectionConverter x:Key="BooleanToMultipleSelectionConverter"/>
        <conv:ParagraphEvenColorConverter x:Key="ParagraphEvenColorConverter"/>
        <SwipeView  x:Key="AppSwipeView">
            <SwipeView.RightItems>
                <SwipeItems Mode="Execute">
                    <SwipeItem Text="Previous Page" Command="{Binding SwipeLeftCommand,Source={StaticResource PageViewModel}}" />
                </SwipeItems>
            </SwipeView.RightItems>

            <SwipeView.LeftItems>
                <SwipeItems Mode="Execute">
                    <SwipeItem Text="Next Page" Command="{Binding SwipeRightCommand,Source={StaticResource PageViewModel}}" />
                </SwipeItems>
            </SwipeView.LeftItems>
            <CollectionView ItemsSource="{Binding Items}" ItemSizingStrategy="MeasureAllItems" autoScroll:CollectionViewAutoScroll.BindTo="{Binding Player.ScrollToIndex}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Grid effect:TouchEffect.LongPressCommand="{Binding LongTouchedCommand, Source={StaticResource PageViewModel}}" effect:TouchEffect.LongPressCommandParameter="{Binding}" BackgroundColor="{Binding MeOnChanged,Converter={StaticResource ParagraphEvenColorConverter}}" VerticalOptions="Start">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Label BackgroundColor="{Binding MeOnChanged,Converter={StaticResource ParagraphEvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text="{Binding MainDisplayValue}" Style="{StaticResource MainParagraphLabel}" VerticalOptions="Start" Margin="10,0,10,0"/>
                            <Label BackgroundColor="{Binding MeOnChanged,Converter={StaticResource ParagraphEvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Grid.Row="1" LineBreakMode="WordWrap" Text="{Binding TranslatedValue}" Style="{StaticResource TranslatedParagraphLabel}" Margin="10,0,10,20" />
                            <StackLayout Grid.Column="1" Grid.RowSpan="2" Orientation="Horizontal" VerticalOptions="Center">
                                <Label BackgroundColor="{Binding MeOnChanged,Converter={StaticResource ParagraphEvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text=")" />
                                <Label BackgroundColor="{Binding MeOnChanged,Converter={StaticResource ParagraphEvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text="{Binding Number}"/>
                                <Label BackgroundColor="{Binding MeOnChanged,Converter={StaticResource ParagraphEvenColorConverter}}" FontSize="{Binding FontSize,Source={StaticResource PageViewModel}}" Text="("  />
                            </StackLayout>
                            <Grid BackgroundColor="{Binding MeOnChanged,Converter={StaticResource ParagraphEvenColorConverter}}" IsVisible="{Binding HasLink}" WidthRequest="24" HeightRequest="24" HorizontalOptions="End" VerticalOptions="End" Grid.RowSpan="2" Grid.Column="1">
                                <Frame CornerRadius="24" BackgroundColor="{StaticResource LinkBackgroundColor}" Padding="5" Margin="5,0,0,5">
                                    <Image Source="icon_link.png"/>
                                </Frame>
                            </Grid>
                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding TouchedCommand, Source={StaticResource PageViewModel}}" CommandParameter="{Binding}" />
                            </Grid.GestureRecognizers>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </SwipeView>
    </ContentView.Resources>
    <ContentView.BindingContext>
        <Binding Source="{StaticResource PageViewModel}"/>
    </ContentView.BindingContext>
    <Grid BackgroundColor="#01FFFFFF">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <OnPlatform x:TypeArguments="View">
            <On Platform="UWP">
                 <StaticResourceExtension Key="AppSwipeView"/>
            </On>
            <On Platform="iOS, Android">
                <RefreshView Command="{Binding RefreshCommand}" IsRefreshing="{Binding IsLoading,Mode=OneWay}">
                    <StaticResourceExtension Key="AppSwipeView"/>
                </RefreshView>
            </On>
        </OnPlatform>


        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Slider Grid.ColumnSpan="3" Value="{Binding Player.PlaybackCurrentPosition,Mode=TwoWay}" FlowDirection="LeftToRight"/>
            <Button HorizontalOptions="Start" Text="{Binding ReadingName}" Command="{Binding RemoveReadingCommand}" Grid.Row="1"/>
            <StackLayout Orientation="Horizontal" Grid.Column="1" Grid.Row="1">
                <Button Text="{Binding CatalogStartPageNumber}" Command="{Binding SelectPageCommand}"/>
                <Button Text="آیه" Command="{Binding SelectVerseCommand}"/>
                <Button FontFamily="icomoon" Text="" WidthRequest="40" Command="{Binding PlayCommand}">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding Player.IsPlaying}" Value="False">
                            <Setter Property="Text" Value="" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding Player.IsPlaying}" Value="True">
                            <Setter Property="Text" Value="" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding Player.IsLoadingPlayStream}" Value="True">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding Player.IsLoadingPlayStream}" Value="False">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <ActivityIndicator IsRunning="{Binding Player.IsLoadingPlayStream}" WidthRequest="40" Grid.Row="1">
                    <ActivityIndicator.Triggers>
                        <DataTrigger TargetType="ActivityIndicator" Binding="{Binding Player.IsLoadingPlayStream}" Value="False">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                        <DataTrigger TargetType="ActivityIndicator" Binding="{Binding Player.IsLoadingPlayStream}" Value="True">
                            <Setter Property="IsVisible" Value="True" />
                        </DataTrigger>
                    </ActivityIndicator.Triggers>
                </ActivityIndicator>
            </StackLayout>
            <ActivityIndicator IsRunning="{Binding IsLoading}" Grid.Column="2" HorizontalOptions="End" Grid.Row="1"/>
        </Grid>
        <Grid.GestureRecognizers>
            <SwipeGestureRecognizer Direction="Left" Command="{Binding SwipeLeftCommand}"/>
            <SwipeGestureRecognizer Direction="Right" Command="{Binding SwipeRightCommand}"/>
        </Grid.GestureRecognizers>
    </Grid>
</ContentView>