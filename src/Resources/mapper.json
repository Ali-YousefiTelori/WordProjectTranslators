{
  "Projects": [
    {
      "Name": "Translators",
      "GeneratePath": "D:\\Github\\WordProjectTranslators\\src\\BackEnd\\Translators.Logics\\Mappers",
      "BuildPath": "D:\\Github\\WordProjectTranslators\\src\\BackEnd\\Translators.ServerApplication\\bin\\Debug\\net6.0",
      "MapClasses": [
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "BookEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "BookContract",
          "ToSkipProperties": [
            "Category",
            "IsHidden",
            "Readings"
          ],
          "CustomPropertiesMap": [
            {
              "From": "Names",
              "To": "$toMap.Names?.Select(x => ValueEntity_ValueContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            }
          ]
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "ValueEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "ValueContract",
          "ToSkipProperties": [
            "TranslatorName",
            "BookName",
            "Category",
            "Catalog",
            "Word"
          ],
          "CustomPropertiesMap": []
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "CatalogEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "CatalogContract",
          "ToSkipProperties": [
            "Book",
            "Paragraphs",
            "BookNames",
            "Readings"
          ],
          "CustomPropertiesMap": [
            {
              "From": "Names",
              "To": "$toMap.Names?.Select(x => ValueEntity_ValueContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            }
          ]
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "LanguageEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "LanguageContract",
          "ToSkipProperties": [
            "Values",
            "Audios"
          ],
          "CustomPropertiesMap": []
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "PageEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "PageContract",
          "ToSkipProperties": [
            "Catalog",
            "CatalogNames",
            "Audioes",
            "BookId",
            "Readings"
          ],
          "CustomPropertiesMap": [
            {
              "From": "AudioFiles",
              "To": "$toMap.Audios?.Select(x => AudioEntity_AudioFileContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            },
            {
              "From": "Paragraphs",
              "To": "$toMap.Paragraphs?.Select(x => ParagraphEntity_ParagraphContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            },
            {
              "From": "Audios",
              "To": "$toMap.AudioFiles?.Select(x => AudioEntity_AudioFileContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            }
          ]
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "CategoryEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "CategoryContract",
          "ToSkipProperties": [
            "Readings"
          ],
          "CustomPropertiesMap": [
            {
              "From": "Names",
              "To": "$toMap.Names?.Select(x => ValueEntity_ValueContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            }
          ]
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "ParagraphEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "ParagraphContract",
          "ToSkipProperties": [
            "Page",
            "Catalog",
            "LinkParagraphs",
            "BookId",
            "PageNumber"
          ],
          "CustomPropertiesMap": [
            {
              "From": "AudioFiles",
              "To": "$toMap.Audios?.Select(x => AudioEntity_AudioFileContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            },
            {
              "From": "Words",
              "To": "$toMap.Words?.Select(x => WordEntity_WordContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            },
            {
              "From": "Audios",
              "To": "$toMap.AudioFiles?.Select(x => AudioEntity_AudioFileContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            },
            {
              "From": "HasLink",
              "To": "$toMap.LinkParagraphs?.Count > 0 || toMap.LinkParagraphs?.Count > 0",
              "Type": 0
            }
          ]
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "WordEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "WordContract",
          "ToSkipProperties": [
            "Paragraph"
          ],
          "CustomPropertiesMap": [
            {
              "From": "Values",
              "To": "$toMap.Values?.Select(x => ValueEntity_ValueContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            }
          ]
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "WordLetterEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "WordLetterContract",
          "ToSkipProperties": [
            "Word"
          ],
          "CustomPropertiesMap": []
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "WordRootEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "WordRootContract",
          "ToSkipProperties": [
            "Word"
          ],
          "CustomPropertiesMap": []
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "TranslatorEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "TranslatorContract",
          "ToSkipProperties": [
            "Values",
            "Audios"
          ],
          "CustomPropertiesMap": [
            {
              "From": "Names",
              "To": "$toMap.Names?.Select(x => ValueEntity_ValueContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            }
          ]
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "LogEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "LogContract",
          "ToSkipProperties": [
            "Values"
          ],
          "CustomPropertiesMap": []
        },
        {
          "FromAssemblyName": "Translators.Database.dll",
          "FromNamespace": "Translators.Database.Entities",
          "FromName": "AudioEntity",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common",
          "ToName": "AudioFileContract",
          "ToSkipProperties": [
            "Url",
            "Data",
            "Page",
            "Language",
            "Paragraph",
            "Translator",
            "AudioReader"
          ],
          "CustomPropertiesMap": []
        },
        {
          "FromAssemblyName": "Translators.Domain.dll",
          "FromNamespace": "Translators.Contracts.Common",
          "FromName": "ParagraphContract",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common.Paragraphs",
          "ToName": "SimpleParagraphContract",
          "ToSkipProperties": [
            "AnotherValue",
            "PageId",
            "Page",
            "CatalogId",
            "Catalog",
            "LinkParagraphs",
            "BookId",
            "PageNumber"
          ],
          "CustomPropertiesMap": [
            {
              "From": "MainWords",
              "To": "$toMap.Words?.Where(x => x.Values.Any(v => v.IsMain || v.IsTransliteration)).Select(x => WordContract_SimpleWordContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            },
            {
              "From": "AudioFiles",
              "To": "$toMap.AudioFiles?.Select(x => AudioFileContract_SimpleFileContractMapper.Map(x, uniqueRecordId, language, parameters)).ToList()",
              "Type": 0
            },
            {
              "From": "MainWords",
              "To": "Words",
              "Type": 0
            },
            {
              "From": "TranslatedValue",
              "To": "$string.Join(' ', toMap.Words?.SelectMany(x => x.Values).Where(x => !x.IsMain && !x.IsTransliteration).Select(x => x.Value))",
              "Type": 0
            }
          ]
        },
        {
          "FromAssemblyName": "Translators.Domain.dll",
          "FromNamespace": "Translators.Contracts.Common",
          "FromName": "WordContract",
          "FromDirectCode": "var value = toMap.Values.First();",
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common.Words",
          "ToName": "SimpleWordContract",
          "ToSkipProperties": [
            "Values",
            "ParagraphId",
            "Paragraph",
            "WordLetters",
            "WordRoots",
            "TranslatorNameId"
          ],
          "CustomPropertiesMap": [
            {
              "From": "TranslatorId",
              "To": "#value.TranslatorId",
              "Type": 0
            },
            {
              "From": "LanguageId",
              "To": "#value.LanguageId",
              "Type": 0
            },
            {
              "From": "Value",
              "To": "#value.Value",
              "Type": 0
            },
            {
              "From": "IsTransliteration",
              "To": "#value.IsTransliteration",
              "Type": 0
            },
            {
              "From": "IsMain",
              "To": "#value.IsMain",
              "Type": 0
            }
          ]
        },
        {
          "FromAssemblyName": "Translators.Domain.dll",
          "FromNamespace": "Translators.Contracts.Common",
          "FromName": "AudioFileContract",
          "FromDirectCode": null,
          "ToDirectCode": null,
          "FromSkipProperties": [],
          "ToAssemblyName": "Translators.Domain.dll",
          "ToNamespace": "Translators.Contracts.Common.Files",
          "ToName": "SimpleFileContract",
          "ToSkipProperties": [
            "PageId",
            "ParagraphId",
            "Data",
            "Page",
            "Language",
            "Paragraph",
            "AudioReader",
            "Translator",
            "Url"
          ],
          "CustomPropertiesMap": []
        }
      ],
      "MapEnums": []
    }
  ]
}